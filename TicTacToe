
public class TicTacToe {
	private final int[] rowSum, colSum;
	private int diagSum, revDiagSum;
	private int winner;
	private final int n;
	private final int[][] board;
	
	TicTacToe(int n){
		this.n=n;
		board= new int[n][n];
		rowSum= new int[n];
		colSum= new int[n];
	}
	
	private int move(int player, int row, int col) throws IllegalArgumentException {
		if(row<0 || col<0 || row>=n || col>=n) {
			throw new IllegalArgumentException("Move out of board boundary!");
		}
		if(board[row][col]!=0) {
			throw new IllegalArgumentException("Square is already occupied!");
		}
		if(player!=0 && player!=1) {
			throw new IllegalArgumentException("Invalid player!");
		}
		if(getWinner()!=0) {
			throw new IllegalArgumentException("Board is Decided!");
		}
		player=player==0?-1:1;
		board[row][col]=player;
		rowSum[row]+=player;
		colSum[col]+=player;
		if(row==col) {
			diagSum+=player;
		}
		if(row==n-1-col) {
			revDiagSum+=player;
		}
		if(rowSum[row]==Math.abs(n) || colSum[col]==Math.abs(n) || diagSum==Math.abs(n) || revDiagSum==Math.abs(n)) {
			winner=player;
		}
		return getWinner();
	}
	
	public int getWinner() {
		return winner;
	}
	
	public static void main(String[] args) {
		
	}
}
